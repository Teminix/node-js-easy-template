function temp(path,callback,vars=null,start="<(",end=")>"){
  const files = require("fs");
  if (path[0] == "/") {
  path = path.replace("/","");
  }
  files.readFile(path,function(error,data){
    if (error) {
      errorMsg= `EasyTemp: Error reading requested file: ${path}`;
      console.error(errorMsg)
      return errorMsg;
    }
    else {
      // response.send(data.toString())
      // console.log(data.toString())
        if (vars == null) {
          callback(data.toString())
        }
        else {
          let output = data.toString();
          // console.log("templating enabled");
          // console.log(html)
          let temp = ""
          for (let char of start) {
            temp = temp+"\\"+char
          }
          start = temp;
          temp = ""
          for (let char of end) {
            temp = temp+"\\"+char
          }
          end = temp
          for (var variable in vars) {
            expression = new RegExp(`${start}${variable}${end}`,"g");
            // console.log(expression)
            output = output.replace(expression,`${vars[variable]}`);
            // console.log(html)
          }
          // console.log(output)
          callback(output)
        }
      }
    })
  }
function tempSync(path,vars=null,start="<(",end=")>"){
  const files = require('fs');
  if (path[0] == "/") {
  path = path.replace("/","");
  }
  let content = files.readFileSync(path).toString();
  let temp = "";
  for (char of start) {
    temp = "\\" + temp + char;
  }
  start = temp;
  temp = "";
  for (char of end) {
    temp = "\\" + temp + char;
  }
  end = temp;
  if (vars == null) {
    return content;
  }
  else {
    let output = content
    for(let variable in vars){
      let expression = new RegExp(`${start}${variable}${end}`,"g")
      output = output.replace(expression,vars[variable])
    }
    return output
  }

}
module.exports.temp = temp;
module.exports.tempSync = tempSync;
